import streamlit as st
import pandas as pd
import pydeck as pdk

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Ç–µ–ø–ª–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è", layout="wide")
st.title("üìä –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Ç–µ–ø–ª–æ–≤–æ–π —ç–Ω–µ—Ä–≥–∏–∏")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV –∏–ª–∏ TXT —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏", type=["csv", "txt"])

if uploaded_file is not None:
    try:
        df = pd.read_csv(uploaded_file, encoding="cp1251", sep=",")
        st.success("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –≤ –∞–¥—Ä–µ—Å–µ
        df["–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å"] = df["–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å"].fillna("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥—Ä–µ—Å")

        # –û—á–∏—Å—Ç–∫–∞ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞
        df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"] = df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"].astype(str).str.strip().str.title()

        # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
        st.sidebar.header("üîé –§–∏–ª—å—Ç—Ä—ã")
        year = st.sidebar.selectbox("–ì–æ–¥", sorted(df["–ì–æ–¥"].dropna().unique()))
        month = st.sidebar.selectbox("–ú–µ—Å—è—Ü", sorted(df[df["–ì–æ–¥"] == year]["–ú–µ—Å—è—Ü"].dropna().unique()))
        district = st.sidebar.multiselect("–†–∞–π–æ–Ω", df["–†–∞–π–æ–Ω"].dropna().unique(), default=list(df["–†–∞–π–æ–Ω"].dropna().unique()))
        building_type = st.sidebar.multiselect("–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞", df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"].dropna().unique(), default=list(df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"].dropna().unique()))

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        filtered_df = df[
            (df["–ì–æ–¥"] == year) &
            (df["–ú–µ—Å—è—Ü"] == month) &
            (df["–†–∞–π–æ–Ω"].isin(district)) &
            (df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"].isin(building_type))
        ]

        st.subheader(f"üìÇ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ({len(filtered_df)} –∑–∞–ø–∏—Å–µ–π)")
        st.dataframe(filtered_df, use_container_width=True)

        # –ì—Ä–∞—Ñ–∏–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è
        st.subheader("üìà –ì—Ä–∞—Ñ–∏–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Ç–µ–ø–ª–æ–≤–æ–π —ç–Ω–µ—Ä–≥–∏–∏")
        if "–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª" in filtered_df.columns:
            chart_data = filtered_df[["–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å", "–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª"]].dropna()
            chart_data = chart_data[chart_data["–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å"] != ""]
            chart_data = chart_data.sort_values("–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª", ascending=False).head(20)

            if not chart_data.empty:
                st.bar_chart(chart_data.set_index("–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å"))
            else:
                st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ ‚Äî –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.")
        else:
            st.warning("–ö–æ–ª–æ–Ω–∫–∞ '–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö.")

        # –ê–Ω–æ–º–∞–ª–∏–∏
        st.subheader("üö® –ê–Ω–æ–º–∞–ª–∏–∏: –ù—É–ª–µ–≤–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ")
        zero_df = filtered_df[filtered_df["–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª"] == 0]
        if not zero_df.empty:
            st.error(f"üîª –ù–∞–π–¥–µ–Ω–æ {len(zero_df)} –æ–±—ä–µ–∫—Ç–æ–≤ —Å –Ω—É–ª–µ–≤—ã–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º:")
            st.dataframe(zero_df, use_container_width=True)
        else:
            st.success("‚úÖ –ù—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤
        st.sidebar.subheader("üìå –¢–∏–ø—ã –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö:")
        st.sidebar.write(df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"].value_counts())

        # –ö–∞—Ä—Ç–∞
        st.subheader("üó∫Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –æ–±—ä–µ–∫—Ç–æ–≤")

        # –°–ª–æ–≤–∞—Ä—å –∏–∫–æ–Ω–æ–∫
        ICON_URLS = {
            "–ú–Ω–æ–≥–æ–∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–π –î–æ–º": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png",
            "–î—Ä—É–≥–æ–µ –°—Ç—Ä–æ–µ–Ω–∏–µ": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png",
            "–£—á–µ–±–Ω–æ–µ –ó–∞–≤–µ–¥–µ–Ω–∏–µ, –ö–æ–º–±–∏–Ω–∞—Ç, –¶–µ–Ω—Ç—Ä": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-orange.png",
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ó–¥–∞–Ω–∏—è, –ö–æ–Ω—Ç–æ—Ä—ã": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png",
            "–î–µ—Ç.–Ø—Å–ª–∏ –ò –°–∞–¥—ã": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-violet.png",
            "–®–∫–æ–ª—ã –ò –í—É–∑": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-orange.png",
            "–ñ–∏–ª–æ–µ –ó–¥–∞–Ω–∏–µ (–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞, –û–±—â–µ–∂–∏—Ç–∏–µ)": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-lightblue.png",
            "–ú–∞–≥–∞–∑–∏–Ω—ã": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png",
            "–ë–æ–ª—å–Ω–∏—Ü—ã": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png",
            "–ò–Ω—Ç–µ—Ä–Ω–∞—Ç": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-lightgreen.png",
            "–û–±—â–µ–∂–∏—Ç–∏–µ": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-lightblue.png",
            "–ê–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–∞": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-black.png",
            "–ù–µ–∂–∏–ª–æ–π –î–æ–º": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png",
            "–ì–∞—Ä–∞–∂–∏": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-black.png",
            "–ö–∞–∑–∞—Ä–º—ã –ò –ü–æ–º–µ—â–µ–Ω–∏—è –í–æ—Ö—Ä": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-darkgreen.png",
            "–ü–æ–∂–∞—Ä–Ω–æ–µ –î–µ–ø–æ": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-darkred.png",
            "–°–ø–æ—Ä—Ç–∑–∞–ª—ã, –ö—Ä—ã—Ç—ã–µ –°—Ç–∞–¥–∏–æ–Ω—ã –ò –î—Ä—É–≥–∏–µ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –°–æ–æ—Ä—É–∂–µ–Ω–∏—è": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-lightgreen.png",
            "–ì—Ä—É–ø–ø–æ–≤–∞—è –°—Ç–∞–Ω—Ü–∏—è –°–º–µ—à–µ–Ω–∏—è": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png",
            "–ê–≤—Ç–æ–º–æ–π–∫–∞": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-black.png",
            "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –û–±—ä–µ–∫—Ç": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-brown.png",
            "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –£—á—Ä–µ–∂–¥–µ–Ω–∏–µ": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png",
            "–û–±—ä–µ–∫—Ç": "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png"
        }


        if "–®–∏—Ä–æ—Ç–∞" in filtered_df.columns and "–î–æ–ª–≥–æ—Ç–∞" in filtered_df.columns:
            map_df = filtered_df[["–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å", "–®–∏—Ä–æ—Ç–∞", "–î–æ–ª–≥–æ—Ç–∞", "–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞", "–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª"]].dropna().copy()
            map_df = map_df.rename(columns={"–®–∏—Ä–æ—Ç–∞": "lat", "–î–æ–ª–≥–æ—Ç–∞": "lon"})

            def get_icon_data(obj_type):
                return {
                    "url": ICON_URLS.get(obj_type, ICON_URLS["–û–±—ä–µ–∫—Ç"]),
                    "width": 30,
                    "height": 30,
                    "anchorY": 30,
                }

            map_df["icon_data"] = map_df["–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"].apply(get_icon_data)

            icon_layer = pdk.Layer(
                type="IconLayer",
                data=map_df,
                get_icon="icon_data",
                get_position='[lon, lat]',
                get_size=4,
                size_scale=10,
                pickable=True,
                tooltip=True,
            )

            view_state = pdk.ViewState(
                latitude=map_df["lat"].mean(),
                longitude=map_df["lon"].mean(),
                zoom=11,
                pitch=0
            )

            tooltip = {
                "html": """
                <b>{–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å}</b><br>
                –¢–∏–ø: {–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞}<br>
                –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: {–¢–µ–∫—É—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –ì–∫–∞–ª} –ì–∫–∞–ª
                """,
                "style": {"backgroundColor": "white", "color": "black"}
            }

            r = pdk.Deck(layers=[icon_layer], initial_view_state=view_state, tooltip=tooltip)
            st.pydeck_chart(r)
        else:
            st.warning("–í –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–®–∏—Ä–æ—Ç–∞ / –î–æ–ª–≥–æ—Ç–∞).")

    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")
else:
    st.info("‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV –∏–ª–∏ TXT —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")
